version: 2.1

parameters:
  windows_image:
    type: string
    default: "circleci/windows@2.2.0"
  project_dir:
    type: string
    default: "JMeterCircleCI"
  test_dir:
    type: string
    default: "JMeterCircleCI.Tests"
  function_zip_file:
    type: string
    default: "func-jmeter.zip"

orbs:
  windows: << pipeline.parameters.windows_image >>

jobs:
  build:
    description: Build application with Release configuration
    executor:
      name: windows/default
    steps:
      - checkout

      - run:
          name: "Build Application according to some given configuration"
          command: >
            dotnet
            build << pipeline.parameters.project_dir >>
            --configuration Release

  test:
    description: Setup and run application tests
    executor:
      name: windows/default
    steps:
      - checkout

      - run:
          name: "Run Application Tests"
          command: >
            dotnet
            test << pipeline.parameters.test_dir >>
            --configuration Release
            --logger trx

      - run:
          name: "Install trx2junit"
          when: always
          command: |
            dotnet tool install -g trx2junit
            trx2junit << pipeline.parameters.test_dir >>/TestResults/*.trx

      - store_test_results:
          name: "Store test results"
          path: << pipeline.parameters.test_dir >>/TestResults

  package:
    description: Package application
    executor:
      name: windows/default
    steps:
      - checkout

      - run:
          name: "Create package folder"
          command: >
            dotnet
            publish << pipeline.parameters.project_dir >>
            --configuration Release
            --output package

      - run:
          name: "Zip package folder"
          command: >
            Compress-Archive
            -Path package
            -DestinationPath << pipeline.parameters.function_zip_file >>

      - persist_to_workspace:
          name: "Upload zip file to shared workspace"
          root: .
          paths:
            - << pipeline.parameters.function_zip_file >>

  deploy:
    description: Deploy application
    executor:
      name: windows/default
    steps:
      - attach_workspace:
          at: .

      - run:
          name: "Login to Azure"
          command: |
            # Login using service principal
            az login `
            --service-principal `
            --tenant "$Env:TENANT_ID" `
            --username "$Env:CLIENT_ID" `
            --password "$Env:CLIENT_SECRET"

            # Set default subscription
            az account set `
            --subscription "$Env:SUBSCRIPTION_ID"

      - run:
          name: "Create azure function"
          command: |
            # Set common variables which is associated with build id
            $Env:RESOURCE_GROUP = "rg-jmeter$Env:CIRCLE_BUILD_NUM"
            $Env:STORAGE_ACCOUNT = "stjmeter$Env:CIRCLE_BUILD_NUM"
            $Env:FUNCTION_APP = "func-jmeter$Env:CIRCLE_BUILD_NUM"

            # Create resource group
            az group create `
            --location eastus `
            --name "$Env:RESOURCE_GROUP"

            # Create storage account
            az storage account create `
            --resource-group "$Env:RESOURCE_GROUP" `
            --name "$Env:STORAGE_ACCOUNT"

            # Create azure function app
            az functionapp create `
            --resource-group "$Env:RESOURCE_GROUP" `
            --storage-account "$Env:STORAGE_ACCOUNT" `
            --name "$Env:FUNCTION_APP" `
            --consumption-plan-location eastus `
            --os-type Windows `
            --runtime dotnet

            # Deploy zip file
            az functionapp deployment source config-zip `
            --resource-group "$Env:RESOURCE_GROUP" `
            --name "$Env:FUNCTION_APP" `
            --src << pipeline.parameters.function_zip_file >>

workflows:
  build_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - package:
          requires:
            - test
          # filters:
          #   branches:
          #     only:
          #       - main
      # - hold:
      #     type: approval
      #     requires:
      #       - package
      - deploy:
          requires:
            - package # hold
